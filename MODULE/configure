#!/bin/bash

#:%s/^[ ]\+/\t/g [TO REPLACE SPACE WITH TAB IN vim]

#Help
Info () {

cat<<EOD

!---------------------------------------------------------------------------------------------------------------------!
!FORTRAN PROGRAM WRITTEN TO COMPUTE UNBIASED DISTRIBUTION (1D AND 2D)FROM TASS SIMULATION ALONG USER DEFINED          !
!COLLECTIVE COORDINATES..                                                                                             !
!ORIGINAL CODE WRITTEN BY Shalini Awasthi (ashalini@iitk.ac.in)                                                       !
!MODIFIED BY Rahul Verma (vrahul@iitk.ac.in)                                                                          !
!                                                                                                                     !
!kt = System Temeprature ; kt0 = Extended CV Temperature ; bias_fact = Biased Factor for MTD ; ct = ct Factor         !
!t_min = Minimum MD steps ; t_max = Maximum MD steps ; narg = Argumets ; ncv = Numer of CV ; v_baias = Total MTD bias !
!cv_mtd = m = MTD CV index ; u_cv = u = Umbrella CV index ; t_cv = t = Temeprature CV index                           !
!UCV = U cv argument ; MTD = MTD cv argument ; Prob_nD = Dimension of Unbiased Probability                            !
!CV_num = Probability is the Dimension of ; pfrqMD = Print Frequency argument ; w_cv Print Frequency in cvmdck File   !
!dtMTD  = Print Frequency argument for MTD bias added ; w_hill = Print Frequency in colvar File                       !
!gridmin = Minimum Grid Size = gridmax = Maximum Grid Size ; griddif = Grid Difference                                !
!width = Hill Width of Gaussian Bias in MTD ; ht = Hill Height of Gaussian Bias in MTD ; ht = MTD CV Displacement     !
!kb = Boltzman Constant in A.U. ; prob = 1D Probability ; prob_2D = 2D Probability                                    !
!---------------------------------------------------------------------------------------------------------------------!

EOD

exit 0;
}

#Help
Help () {

cat<<EOD

Usage: ./configure [flags] compiler

    where compiler is one of: [[ gnu, intel ]]

                              COMPILERS
                 -----------------------------------
    Compiler Set |     C     |    C++    | Fortran 
    ------------------------------------------------
      gnu        |    gcc    |   g++     | gfortran
      intel      |    icc    |   icpc    | ifort

    Flags (Optional):
      -openmp        Use OpenMP pragmas to parallelize soeme of the loops .
===============================================================================

EOD

exit 0;
}


#Is it help option or debug option
info=0 ; i=1

while [ $i -le $# ];
do
  #Select the i-th argument
  eval option=\$$i
  case $option in
    -help|-h)
      Help
      exit 0
      ;;
    -info|-i)
      Info
      ;;
  esac
  i=`expr $i + 1`
done
os=`uname -s`
echo 
echo "Found $os Operating System"
compiler=''
echo "PLEASE SPECIFY THE COMPILER [gnu/intel]" 
read compiler

case $os in

    Linux)
#gfortran

echo '#makefile' > makefile
echo "#===============================================================" >> makefile
echo "#This makefile written to compile the unbiasing program	      " >> makefile
echo "#and writting unbiased probabilities			      " >> makefile
echo "#===============Written by Rahul Verma==========================" >> makefile

echo >> makefile

#echo '.RECIPEPREFIX+=' >> makefile
#echo >> makefile

echo 'reweight_tass.exe : GetSteps.o welcome.o Check_File.o Plumed_Read.o Print_Data.o Read_Files.o Prepare_Inputs.o Reweight_METAD.o TASS_REWIGHTING.o' >> makefile
           if [ "$compiler" = "gnu" ]
           then
echo '		   	gfortran -o reweight_tass.exe GetSteps.o welcome.o Check_File.o Print_Data.o Plumed_Read.o Read_Files.o Prepare_Inputs.o Reweight_METAD.o  TASS_REWIGHTING.o' >> makefile
echo >> makefile
echo 'GetSteps.o : GetSteps.f90' >> makefile
echo '	gfortran -c GetSteps.f90' >> makefile
echo >> makefile
echo 'welcome.o : welcome.f90' >> makefile
echo '	gfortran -c welcome.f90' >> makefile
echo >> makefile
echo 'Check_File.o : Check_File.f90' >> makefile
echo '	gfortran -c Check_File.f90' >> makefile
echo >> makefile
echo 'Plumed_Read.o : Plumed_Read.f90' >> makefile
echo '	gfortran -c Plumed_Read.f90' >> makefile
echo >> makefile
echo 'Print_Data.o : Print_Data.f90' >> makefile
echo '	gfortran -c Print_Data.f90' >> makefile
echo >> makefile
echo 'Read_Files.o : Read_Files.f90' >> makefile
echo '	gfortran -c Read_Files.f90' >> makefile
echo >> makefile
echo 'Prepare_Inputs.o : Prepare_Inputs.f90' >> makefile
echo '	gfortran -c Prepare_Inputs.f90' >> makefile
echo >> makefile
echo 'Reweight_METAD.o : Reweight_METAD.f90' >> makefile
echo '	gfortran -c Reweight_METAD.f90' >> makefile
echo >> makefile
echo 'TASS_REWIGHTING.o : TASS_REWIGHTING.f90' >> makefile
echo '	gfortran -c TASS_REWIGHTING.f90' >> makefile
echo >> makefile

           elif [ "$compiler" = "intel" ]
           then
echo '                  ifort -o reweight_tass.exe GetSteps.o welcome.o Check_File.o Print_Data.o Plumed_Read.o Read_Files.o Prepare_Inputs.o Reweight_METAD.o  TASS_REWIGHTING.o' >> makefile

echo >> makefile
echo 'GetSteps.o : GetSteps.f90' >> makefile
echo '  ifort -c GetSteps.f90' >> makefile
echo >> makefile
echo 'welcome.o : welcome.f90' >> makefile
echo '  ifort -c welcome.f90' >> makefile
echo >> makefile
echo 'Check_File.o : Check_File.f90' >> makefile
echo '	ifort -c Check_File.f90' >> makefile
echo >> makefile
echo 'Plumed_Read.o : Plumed_Read.f90' >> makefile
echo '	ifort -c Plumed_Read.f90' >> makefile
echo >> makefile
echo 'Print_Data.o : Print_Data.f90' >> makefile
echo '	ifort -c Print_Data.f90' >> makefile
echo >> makefile
echo 'Read_Files.o : Read_Files.f90' >> makefile
echo '	ifort -c Read_Files.f90' >> makefile
echo >> makefile
echo 'Prepare_Inputs.o : Prepare_Inputs.f90' >> makefile
echo '  ifort -c Prepare_Inputs.f90' >> makefile
echo >> makefile
echo 'Reweight_METAD.o : Reweight_METAD.f90' >> makefile
echo '	ifort -c Reweight_METAD.f90' >> makefile
echo >> makefile
echo 'TASS_REWIGHTING.o : TASS_REWIGHTING.f90' >> makefile
echo '  ifort -c TASS_REWIGHTING.f90' >> makefile
echo >> makefile

	else echo "COPILER NOT FOUND EXITING ..."  && exit
fi
echo 'clean   :' >> makefile
echo '        rm *.o *.mod reweight_tass.exe' >> makefile

esac
echo ""
echo "A MAKE FILE IS WRITTEN ACCORDING TO "$compiler" COMPILER "
echo "YOU CAN TYPE MAKE TO COMPILE ALL THE PROGRAMS"
echo ""
